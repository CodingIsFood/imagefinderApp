{"version":3,"sources":["logo.svg","components/navbar.js","components/imageresults.js","components/search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","AppBar_default","title","ImageResults","state","open","currentImg","handleOpen","img","_this","setState","handleClose","imageListContent","_this2","this","images","props","GridList","cols","map","tags","key","id","subtitle","user","actionIcon","IconButton_default","onClick","largeImageURL","zoom_in_default","color","src","alt","actions","FlatButton_default","label","primary","Dialog_default","modal","onRequestClose","style","width","Component","Search","searchText","amount","apiurl","apikey","onTextChange","e","val","target","value","Object","defineProperty","name","axios","get","concat","then","res","data","hits","catch","err","console","log","onAmountChange","index","TextField_default","onChange","floatingLabelText","fullWidth","SelectField_default","MenuItem_default","primaryText","length","imageresults","App","MuiThemeProvider_default","navbar","search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0043899c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport AppBar from 'material-ui/AppBar';\n\nconst NavBar= () => <AppBar title=\"Image Finder App\"/>\n\nexport default NavBar;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n\tstate = {\n\t\topen: false,\n\t\tcurrentImg: []\n\t}\n\n\thandleOpen = (img) => {\n\t\tthis.setState({open: true, currentImg: img})\n\t}\n\n\thandleClose = () => {\n\t\tthis.setState({open: false, currentImg: null})\n\t}\n\n\trender(){\n\t\tlet imageListContent;\n\t\tconst {images} = this.props;\n\n\t\tif (images) {\n\t\t\timageListContent=(\n\t\t\t\t<GridList cols={3}>\n\t\t\t\t\t{images.map(img => (\n\t\t\t\t\t\t<GridTile\n\t\t\t\t\t\t\ttitle={img.tags}\n\t\t\t\t\t\t\tkey={img.id}\n\t\t\t\t\t\t\tsubtitle={\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\tby <strong>{img.user}</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tactionIcon={\n\t\t\t\t\t\t\t\t<IconButton onClick={() => {this.handleOpen(img.largeImageURL)}}>\n\t\t\t\t\t\t\t\t\t<ZoomIn color=\"white\" />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<img src={img.largeImageURL} alt=\"\" />\n\t\t\t\t\t</GridTile>\n\t\t\t\t\t))}\n\t\t\t\t</GridList>\n\t\t\t\t)\n\t\t}\n\t\tconst actions=[\n\t\t\t<FlatButton label=\"close\" primary={true} onClick={this.handleClose} />\n\t\t]\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{imageListContent}\n\t\t\t\t<Dialog\n\t\t\t\t\tactions={actions}\n\t\t\t\t\tmodal={false}\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tonRequestClose={this.handleClose}>\n\t\t\t\t\t<img src={this.state.currentImg} alt=\"\" style={{width:\"100%\"}} />\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nImageResults.propTypes={\n\timages: PropTypes.array.isRequired\n}\n\nexport default ImageResults;\n","import React, { Component } from 'react';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport axios from 'axios';\nimport ImageResults from './imageresults.js'\n\n\nclass Search extends Component {\nstate = {\n\tsearchText: '',\n\tamount: 5,\n\tapiurl: \"https://pixabay.com/api/\",\n\tapikey: \"11620925-8698ca9d4c482a1f734b88dea\",\n\timages: []\n}\n\nonTextChange = (e) => {\n\tconst val=e.target.value\n\tthis.setState({[e.target.name]: val}, () => {\n\t\tif (val===''){\n\t\t\tthis.setState({images: []})\n\t\t}\n\t\telse {\n\t\t//https://pixabay.com/api/?key=11620925-8698ca9d4c482a1f734b88dea&q=yellow+flowers&image_type=photo\n\t\t\taxios.get(`${this.state.apiurl}/?key=${this.state.apikey}&q=${this.state.searchText}&image_type=photo&per_page=${this.state.amount}&safesearch=false`)\n\t\t\t.then(res => this.setState({images: res.data.hits}))\n\t\t\t.catch(err => console.log(err));\n\t\t\t}\n\t\t})\n}\n\nonAmountChange = (e, index, value) => { this.setState({amount: value})}\n\n\trender(){\n\t\tconsole.log(this.state.images);\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<TextField\n\t\t\t\t\tname=\"searchText\"\n\t\t\t\t\tvalue={this.state.searchText}\n\t\t\t\t\tonChange={this.onTextChange}\n\t\t\t\t\tfloatingLabelText=\"Search for Images\"\n\t\t\t\t\tfullWidth={true}\n\t\t\t\t/>\n\t\t\t\t<br />\n\n\t\t\t<SelectField\n\t            value={this.state.amount}\n\t            onChange={this.onAmountChange}\n\t            floatingLabelText=\"Amount\"\n            >\n\t            <MenuItem value=\"\">\n\t              <em>None</em>\n\t            </MenuItem>\n\t            <MenuItem value={5} primaryText=\"five\" />\n\t            <MenuItem value={10} primaryText=\"ten\" />\n\t            <MenuItem value={15} primaryText=\"fifteen\" />\n\t            <MenuItem value={20} primaryText=\"twenty\" />\n          </SelectField>\n          <br/>\n          {this.state.images.length>0 ? (<ImageResults images={this.state.images} />):null}\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport NavBar from './components/navbar.js'\nimport Search from './components/search.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n        <div>\n          <NavBar />\n          <Search />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}